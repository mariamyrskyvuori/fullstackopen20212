{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","onChange","filterName","value","PersonForm","onSubmit","onNameChange","newName","onNumberChange","newNumber","type","Persons","personsToShow","removePerson","map","person","name","number","onClick","ErrorNotification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","AddedNotification","App","useState","persons","setPersons","console","log","length","useEffect","personsService","initialPersons","setNewName","setNewNumber","showAll","setShowAll","setFilterName","errorMessage","setErrorMessage","addedMessage","setAddedMessage","filter","toLowerCase","includes","event","target","preventDefault","personObject","personToUpdate","find","window","confirm","returnedPerson","setTimeout","catch","error","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1a3b323.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://fs2021mm.herokuapp.com/api/persons'\n\n//const baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst removePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\n\nexport default {getAll, create, update, removePerson}","import React, {useEffect, useState} from 'react'\nimport personsService from './services/persons'\n\nconst Filter = ({onChange, filterName}) => {\n    return (\n        <div>filter shown with: <input\n            value={filterName}\n            onChange={onChange}\n        />\n        </div>\n    )\n}\nconst PersonForm = ({onSubmit, onNameChange, newName, onNumberChange, newNumber}) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <div>\n                name: <input\n                value={newName}\n                onChange={onNameChange}\n            />\n            </div>\n            <div>\n                number: <input\n                value={newNumber}\n                onChange={onNumberChange}\n            />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\nconst Persons = ({personsToShow, removePerson}) => {\n    return (\n        <div>{personsToShow.map(person => <p key={person.name}>{person.name} {person.number}\n            <button onClick={() => removePerson(person)}>delete</button>\n        </p>)}\n        </div>\n    )\n}\n\nconst ErrorNotification = ({message}) => {\n    if (!message) {\n        return null\n    }\n\n    const errorStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    return (\n        <div style={errorStyle}>\n            {message}\n        </div>\n    )\n}\nconst AddedNotification = ({message}) => {\n    if (!message) {\n        return null\n    }\n\n    const addedStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    return (\n        <div style={addedStyle}>\n            {message}\n        </div>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    console.log('render', persons.length, 'persons')\n    useEffect(() => {\n        personsService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [filterName, setFilterName] = useState('')\n    const [errorMessage, setErrorMessage] = useState()\n    const [addedMessage, setAddedMessage] = useState()\n\n    const addName = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n        const personToUpdate = persons.find((({name}) => name === newName))\n        if (!!personToUpdate) {\n            if (window.confirm(newName + \" is already added to phonebook, replace the old number with a new one?\")) {\n                personsService\n                    .update(personToUpdate.id, personObject)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(person => {\n                            return person.name !== newName ? person : returnedPerson\n                        }))\n                        setNewName('')\n                        setNewNumber('')\n                        setAddedMessage(\n                            `Updated '${returnedPerson.name}'`\n                        )\n                        setTimeout(() => {\n                            setAddedMessage(null)\n                        }, 3000)\n                    })\n                    .catch(error => {\n                        setErrorMessage(\n                            `Information of '${personToUpdate.name}' has already been removed from server`\n                        )\n                        setTimeout(() => {\n                            setErrorMessage(null)\n                        }, 3000)\n                    })\n\n            }\n        } else {\n            personsService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setAddedMessage(\n                        `Added '${returnedPerson.name}'`\n                    )\n                    setTimeout(() => {\n                        setAddedMessage(null)\n                    }, 3000)\n                }).catch(error => {\n                    setErrorMessage(error.response.data.message)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 3000)\n                })\n        }\n    }\n    const removePerson = (person) => {\n        if (window.confirm(\"Delete \" + person.name + \"?\")) {\n            personsService\n                .removePerson(person.id)\n                .then(() => {\n                    personsService\n                        .getAll()\n                        .then(persons => {\n                            setPersons(persons)\n                        })\n                    setAddedMessage(\n                        `Deleted '${person.name}'`\n                    )\n                    setTimeout(() => {\n                        setAddedMessage(null)\n                    }, 3000)\n                })\n\n        }\n    }\n    const personsToShow = showAll\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\n    const handleNameChange = (event) => {\n        console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        console.log(event.target.value)\n        setNewNumber(event.target.value)\n    }\n    const handleFilterChange = (event) => {\n        console.log(event.target.value)\n        setShowAll(event.target.value === \"\")\n        setFilterName(event.target.value)\n    }\n    return (\n        <div>\n\n            <h1>Phonebook</h1>\n            <ErrorNotification message={errorMessage}/>\n            <AddedNotification message={addedMessage}/>\n            <div>\n                <Filter filterName={filterName} onChange={handleFilterChange}/>\n                <h2>Add a new</h2>\n                <PersonForm onSubmit={addName}\n                            newName={newName} onNameChange={handleNameChange}\n                            newNumber={newNumber} onNumberChange={handleNumberChange}/>\n                <h2>Numbers</h2>\n                <Persons personsToShow={personsToShow} removePerson={removePerson}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}